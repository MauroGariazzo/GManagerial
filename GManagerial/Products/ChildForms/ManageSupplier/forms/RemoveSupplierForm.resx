<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lv9jMPZfj1Dwp5mJx8IAAAAASUVORK5CYII=
</value>
  </data>
</root>