<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAk1JREFUSEvFVEFLFVEUfs9nRtCbO/Nk3tw3POfOPAcijQperQIFoYXZQqiNEgqu
        ctEiKP0HLYIWGf4G2xY9EKGgnZiUoBjUIhA3Ri1MUFxkfefe46bHvDcyRR9c7txvzj3fOfece3P/B319
        XVY5um574T3hhTO2DCcwFP/NgvopOJyF4+9w+Kt5qCW7HF1k45OhVIotOHlDjoRULxyphou+352L49NF
        PzxnMlE7mPeFjG7zttTowMaG7alDp6zGmGsCCQpPvdV2leAa0+0Bp+MUOaK+y1QiTKbqk5DhBpYFw7YB
        InqHY1nDZ94wrSFkcIsDGmYqGWdl7ML4iM6YqfZAlyGgXYw5ZpJhydoVHY0XjDCVCui0VQi85GUyRCWo
        k4DtRTeZSgUIvKdu42UyMh7RU2ZaA0VegTEVucMwrXGiIhOo93nDNFOJKBb9bkcGXxDQOpbp2hTIo69f
        8UUbZ64JdNFg85mCEeXgEdOpsj5+Kl7rzegOZHOD6kNPRUmq86gR3ij1FfMBCvyB7bYxU/0arqsku2qJ
        TmTyAA6+kYM/xhEEFh2vdgF2BTj9CIEfuNWPMe/hCdkSvrps3LQFvarBEITouX5oy+iOU6kF/FMDjpep
        OfDZabvhJS1AQhU1aiwyAhlN6swoK6cm6Ii0qAx/0nGyWTYg6ikIHMLhpuX29Far1TMQeU7CyOYZm2UD
        nA3qmpm6DYDKQ3CeRCy3NzZWGUHRUxY6G6nuQ+wJCTheTz+bZAfVASINckwD3bjAv/4uLBldpReal/8a
        udxvJESO+5s86vAAAAAASUVORK5CYII=
</value>
  </data>
</root>