<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LoadBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAABoSURBVDhPYyAA8qCYLBACxFuhGMQmCQQD8TQoDcITgDgK
        iIkGQUDMCKWR2SQDmAFEgQVAPBOKM0ACQIBsAEgMJg9SiwEWQ2lkgMsF2NQOVwPUoBgdEG0ALjBcDdgB
        xKuIxCC1QMDAAAB/SSLU7NRtjgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="ExitBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAACASURBVDhPrZPLCYAwEAXj2Rq0HSuwBQvwYkNetEUFfU8N
        hHx2NWZg8JPNHAIxJWnhDFdFzjQwoIcHjG1y5QxnA2xAIxl4ixjonqdENFDBCe7Xl0wQqOECuUD9Qxuh
        S/mAZYDb/SqSDJDsQ/xCMsCfXNRQA/4h+iYDvCC/LlMGxpyxUTyBryPxkQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>